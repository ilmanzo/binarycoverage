GNU gdb (GDB; openSUSE Tumbleweed) 15.2
Copyright (C) 2024 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-suse-linux".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://bugs.opensuse.org/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /usr/bin/gzip...
Reading symbols from /usr/lib/debug/usr/bin/gzip.debug...
All defined functions:

File ../sysdeps/x86_64/start.S:
	void _start(void);

File ./lib/stat-time.h:
29:	int openat_safer(int, const char *, int, ...);
30:	int rpl_printf(const char *, ...);
116:	int unzip(int, int);

File /usr/include/bits/string_fortified.h:
178:	void bi_windup(void);
800:	int rpl_fclose(FILE *);
136:	void send_bits(int, int);
383:	int unlzh(int, int);
103:	static void fillbuf(int);
136:	static void make_table(int, uch *, int, ush *);
199:	static void read_pt_len(int, int, int);

File /usr/include/bits/wchar2.h:
29:	int open_safer.constprop.0(const char *, int, int, const char *, ...);

File /usr/include/stdlib.h:
37:	int fd_safer(int);

File /usr/src/debug/gzip-1.13/bits.c:
102:	int unlzw(int, int);

File /usr/src/debug/gzip-1.13/gzip.c:
29:	char *last_component(const char *);

File /usr/src/debug/gzip-1.13/trees.c:
36:	int rpl_fprintf(FILE *, const char *, ...);

File /usr/src/debug/gzip-1.13/unpack.c:
2103:	void finish_up_gzip(int);
417:	int main(int, char **);
2118:	static void abort_gzip_signal(int);
822:	static _Bool atdir_eq(const char *, ptrdiff_t);
834:	static int atdir_set(const char *, ptrdiff_t);
1460:	static void discard_input_bytes(size_t, unsigned int);
2046:	static void do_exit(int);
1720:	static void do_list(int);
2068:	static void finish_out(void);
698:	static void get_input_size_and_time(void);
1487:	static int get_method(int);
1165:	static char *get_suffix(char *);
680:	static int input_eof(void);
392:	static void license(void);
410:	static void progerror(const char *);
2079:	static void remove_output_file(_Bool);
862:	static void treat_file(char *);
720:	static void treat_stdin(void);
333:	static void try_help(void);

File /usr/src/debug/gzip-1.13/zip.c:
126:	int file_read(char *, unsigned int);
38:	int zip(int, int);

File <artificial>:
479:	void fprint_off.constprop.0(FILE *, off_t, int);
300:	char *strlwr.isra.0(char *);
2204:	char *vasnprintf(char *, size_t *, const char *, struct __va_list_tag *);
1224:	static int open_and_stat.constprop.0(struct stat *, int, char *);

File lib/basename-lgpl.c:
225:	void *xpalloc(void *, idx_t *, idx_t, ptrdiff_t, idx_t);
337:	char *xstrdup(const char *);
51:	static int direntry_cmp_name(const void *, const void *);
532:	static void fill_window(void);
374:	static int longest_match(IPos);
589:	static void rsync_roll(unsigned int, unsigned int);

File lib/fseeko.c:
113:	int copy(int, int);
469:	void display_ratio(off_t, off_t, FILE *);
184:	int fill_inbuf(int);
253:	void flush_outbuf(void);
265:	void flush_window(void);
431:	void gzip_error(const char *);
214:	int read_buffer(int, voidp, unsigned int);
449:	void read_error(void);
137:	ulg updcrc(const uch *, unsigned int);
279:	void write_buf(int, voidp, unsigned int);
457:	void write_error(void);
438:	void xalloc_die(void);

File lib/fseterr.c:
36:	int rpl_vfprintf(FILE *, const char *, struct __va_list_tag *);

File lib/printf-parse.c:
198:	void copy_block.constprop.0(char *, unsigned int, int);
1030:	void mbszero(mbstate_t *);

File lib/xmalloc.c:
982:	int ct_tally(int, int);
874:	off_t flush_block(char *, ulg, int, int);
202:	int rpl_fcntl(int, int, ...);
909:	int rpl_fflush(FILE *);
218:	int unpack(int, int);
625:	static void build_tree(tree_desc *);
1035:	static void compress_block(ct_data *, ct_data *);
584:	static void gen_codes(ct_data *, int);
274:	static int huft_build(unsigned int *, unsigned int, unsigned int, ush *, ush *, struct huft **, int *);
498:	static int huft_free(struct huft *);
520:	static int inflate_codes(struct huft *, struct huft *, int, int);
735:	static int inflate_dynamic(void);
685:	static int inflate_fixed(void);
418:	static void init_block(void);
465:	static void pqdownheap(ct_data *, int);
81:	static unsigned char read_byte(void);
714:	static void scan_tree(ct_data *, int);
759:	static void send_tree(ct_data *, int);

Non-debugging symbols:
0x000000000000be70  deregister_tm_clones
0x000000000000bea0  register_tm_clones
0x000000000000bee0  __do_global_dtors_aux
0x000000000000bf20  frame_dummy
0x0000000000003030  __strcat_chk@plt
0x0000000000003040  getenv@plt
0x0000000000003050  sigprocmask@plt
0x0000000000003060  __snprintf_chk@plt
0x0000000000003070  raise@plt
0x0000000000003080  free@plt
0x0000000000003090  utimensat@plt
0x00000000000030a0  localtime@plt
0x00000000000030b0  abort@plt
0x00000000000030c0  __errno_location@plt
0x00000000000030d0  fdatasync@plt
0x00000000000030e0  unlink@plt
0x00000000000030f0  strcpy@plt
0x0000000000003100  unlinkat@plt
0x0000000000003110  isatty@plt
0x0000000000003120  sigaction@plt
0x0000000000003130  fcntl@plt
0x0000000000003140  clock_gettime@plt
0x0000000000003150  write@plt
0x0000000000003160  fclose@plt
0x0000000000003170  strlen@plt
0x0000000000003180  openat@plt
0x0000000000003190  __stack_chk_fail@plt
0x00000000000031a0  getopt_long@plt
0x00000000000031b0  strrchr@plt
0x00000000000031c0  lseek@plt
0x00000000000031d0  memset@plt
0x00000000000031e0  close@plt
0x00000000000031f0  strspn@plt
0x0000000000003200  closedir@plt
0x0000000000003210  strcspn@plt
0x0000000000003220  read@plt
0x0000000000003230  memcmp@plt
0x0000000000003240  utimes@plt
0x0000000000003250  calloc@plt
0x0000000000003260  strcmp@plt
0x0000000000003270  putc@plt
0x0000000000003280  signal@plt
0x0000000000003290  __memcpy_chk@plt
0x00000000000032a0  sigemptyset@plt
0x00000000000032b0  stat@plt
0x00000000000032c0  memcpy@plt
0x00000000000032d0  __isoc23_strtol@plt
0x00000000000032e0  fileno@plt
0x00000000000032f0  readdir@plt
0x0000000000003300  malloc@plt
0x0000000000003310  wcrtomb@plt
0x0000000000003320  fflush@plt
0x0000000000003330  fseek@plt
0x0000000000003340  __freading@plt
0x0000000000003350  realloc@plt
0x0000000000003360  __strcpy_chk@plt
0x0000000000003370  fchmod@plt
0x0000000000003380  memmove@plt
0x0000000000003390  fsync@plt
0x00000000000033a0  open@plt
0x00000000000033b0  fchown@plt
0x00000000000033c0  fdopendir@plt
0x00000000000033d0  futimens@plt
0x00000000000033e0  __memset_chk@plt
0x00000000000033f0  sigismember@plt
0x0000000000003400  exit@plt
0x0000000000003410  fwrite@plt
0x0000000000003420  strerror@plt
0x0000000000003430  fstat@plt
0x0000000000003440  getc@plt
0x0000000000003450  sigaddset@plt
0x0000000000003460  futimesat@plt
0x0000000000003470  __ctype_tolower_loc@plt
0x0000000000003480  __ctype_b_loc@plt
0x0000000000003490  __cxa_finalize@plt
